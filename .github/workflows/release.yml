name: 'release'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: '0.0.0'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.release.outputs.NEW_TAG }}
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global user.name dwilkolek-ghbot
          git config --global user.email dwilkolek-ghbot@users.noreply.github.com
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: create release ${{ inputs.version }}
        id: release
        env:
          NEW_VER: ${{ inputs.version }}
        run: |
          NEW_TAG="v$NEW_VER"
          pnpm bump-version $NEW_VER
          pnpm install
          cd src-tauri && cargo generate-lockfile && cd ..
          pnpm format
          pnpm lint
          pnpm check
          git commit -a -m"Release v$NEW_VER"
          git tag $NEW_TAG
          git push
          git push origin $NEW_TAG
          echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_OUTPUT"
  publish-tauri:
    needs: release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--verbose --target aarch64-apple-darwin'
          #   platform-name: 'Macos-M1'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--verbose --target x86_64-apple-darwin'
          #   platform-name: 'Macos-Intel'
          - platform: 'macos-latest' # for Univrsal based macs.
            args: '--verbose --target universal-apple-darwin'
            platform-name: 'Macos-Universal'
          - platform: 'ubuntu-latest' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: '--verbose'
            platform-name: 'Linux'
          - platform: 'windows-latest'
            args: '--verbose'
            platform-name: 'Windows'
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
        with:
          ref: ${{needs.release.outputs.new_tag}}
      - uses: bluwy/substitute-string-action@v3
        id: sub
        with:
          _input-file: 'src-tauri/src/main.rs'
          _output-file: 'src-tauri/src/main.rs'
          _format-key: '%%key%%'
          PROFILE: 'release'
          WOMBAT_API_URL: ${{ secrets.WOMBAT_API_URL }}
          WOMBAT_API_USER: ${{ secrets.WOMBAT_API_USER }}
          WOMBAT_API_PASSWORD: ${{ secrets.WOMBAT_API_PASSWORD }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install -y \
            libwebkit2gtk-4.1-0=2.44.0-2 \
            libwebkit2gtk-4.1-dev=2.44.0-2 \
            libjavascriptcoregtk-4.1-0=2.44.0-2 \
            libjavascriptcoregtk-4.1-dev=2.44.0-2 \
            gir1.2-javascriptcoregtk-4.1=2.44.0-2 \
            gir1.2-webkit2-4.1=2.44.0-2;
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: install frontend dependencies
        run: pnpm install --frozen-lockfile
      - name: lint
        run: |
          pnpm lint
          pnpm check
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: '${{needs.release.outputs.new_tag}}' # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: '${{needs.release.outputs.new_tag}}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
          args: ${{ matrix.args }}
